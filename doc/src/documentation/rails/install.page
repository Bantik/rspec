---
title: Installation
inMenu: true
---
h2. RSpec on Rails - Installation

h3. Pre-Installation

You'll have to install the RSpec gem first:

<pre>
gem install rspec
</pre>

Take note of what rspec version you're installing - it's very important that you
install a compatible RSpec on Rails plugin.

h3. Installation

RSpec on Rails is a regular Rails plugin. It can be installed via your Rails app's script/plugin tool.
In the examples below - make sure you replace X_Y_Z with the version of the plugin you want to install.
It's important that the REL_X_Y_Z corresponds to the version of RSpec core you have installed - for example
REL_0_7_0.

<pre>
ruby script/plugin install svn://rubyforge.org/var/svn/rspec/tags/REL_X_Y_Z/rspec_on_rails/vendor/plugins/rspec_on_rails
</pre>

Or if you like to live dangerously you can get the HEAD of the trunk (in which case you *must* build and install your own RSpec gem):

<pre>
ruby script/plugin install svn://rubyforge.org/var/svn/rspec/trunk/rspec_on_rails/vendor/plugins/rspec_on_rails
</pre>

If your own project is in Subversion and you'd like RSpec on Rails to always follow HEAD, install with -x:

<pre>
ruby script/plugin install -x svn://rubyforge.org/var/svn/rspec/trunk/rspec_on_rails/vendor/plugins/rspec_on_rails
</pre>

Once the plugin is installed, you must bootstrap your Rails app with RSpec. Stand in the root of your Rails app and run:

<pre>
ruby script/generate rspec
</pre>

This will generate the various files needed to use RSpec with Rails.

h3. Post-Installation

After you have installed the plugin, you should have a <tt>spec/spec.opts</tt> file with generic command line
options for the various <tt>spec:*</tt> tasks. You can edit this file and use any of the command line options
supported by the <tt>spec</tt> command.