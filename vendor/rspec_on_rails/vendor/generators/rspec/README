RspecOnRails
============

Originally contributed by Lachie Cox.

Mashes Rails' Test::Unit::TestCase fixture loading with RSpec.

It allows you to use rspec (http://rspec.rubyforge.org) with rails.

* load fixtures like normal rails testing
* use many of the controller-test integration features


Installation:
=============
The plugin automatically creates a RAILS_ROOT/spec directory.
It then copies over a default spec_helper.rb and creates unit, functional and fixtures sub-directories


Usage:
======

a spec might look like

require File.dirname(__FILE__) + '/../spec_helper'

context "the Person model" do
  fixtures :people

  setup do
    # fixtures are setup before this
    puts "setup" # stuff
  end

  specify "should find an existing person" do
    person = Person.find(1)

    person.should.not.be nil 
    person.should.equal people(:billy)
    person.name.should.equal 'billy'
  end

  teardown do
    puts "teardown" # stuff
    # fixtures are torn down after this
  end
end

You run the spec like

$ spec -v person_spec.rb

Controller spec Usage:
=====================

context "The Families controller" do
  fixtures :families, :brothers
  set_controller_name :families

  helper :make_brother do |name|
    Brother.new :name => name, :age => 21, :family => family(:smith)
  end

  specify "should add a brother" end
    family(:smith).should.have(3).brothers

    # posts to the FamiliesController, action 'add_brother'
    post 'add_brother', :family => 'smith', :name => 'Jim', :age => 21

    response.should.be.success
    assigns('brother').should.equal make_brother('Jim')

    family(:smith).should.have(4).brothers
  end
end

Todo:
====
* add tests.
* add spec generators.
* add rcov task.
* see if it can be used with autotest.

By:
==
Lachie Cox, <lachiec@gmail.com>
http://lachie.info

With valuable contributions and feedback from:
Chad Nantais, <cnantais@gmail.com>

many thanks to the RSpec team
http://rspec.rubyforge.org/

thanks to Zenspider:
Some code in the Controller mixin is lifted from zenspider's Test::Unit::Rails
http://www.zenspider.com/ZSS/Products/ZenTest/index.html

thanks to the Rails team
http://rubyonrails.org
