---
title: RCov
inMenu: true
---
h2. RCov

RSpec has tight integration with "RCov":http://eigenclass.org/hiki.rb?rcov=.

h3. Run specs with RCov

<ruby file="../test/tasks/examples_with_rcov.rake"/>

By adding rcov=true to the rake task, specs will be run with rcov
instead of ruby, and a coverage report like "this":../coverage/index.html will be generated.

See "Spec::Rake::SpecTask":../rdoc/classes/Spec/Rake/SpecTask.html for details.

h3. Coverage threshold

You can guard your codebase's coverage from dropping below a certain threshold
by using RSpec's built-in task for verification of the total RCov coverage.

<ruby file="../test/tasks/rcov_verify.rake"/>

This will give you a :rcov_verify task that will fail your build if the
coverage drops below the threshold you define (the higher the better).
If it's too low you're encouraged to write more specs rather than "fix"
the threshold value (which should usually only be adjusted upwards).

In fact, the task will also fail the build if the coverage raises above the threshold as well.
This might seem a bit counterintuitive, but this is when you should go and raise the
threshold in your Rakefile. This way you won't miss temporary coverage increases.

See "RCov::VerifyTask":../rdoc/classes/RCov/VerifyTask.html for details.
