---
title: Runners 
inMenu: true
---
h2. RSpec on Rails - Runners

h3. Standard spec command

<pre>
spec path/to/directory/with/specs
spec path/to/individual_spec.rb
</pre>

h3. Run specs fast with drbspec (recommended)

Loading the entire Rails environment every time a spec is executed is quite slow.
To speed things up, RSpec on Rails installs a daemon that loads the local Rails app
and listens for incoming connections via DRb.

Open up two shells and run the following in the first:

<pre>
script/rails_spec_server
</pre>

- And then run this in the second:

<pre>
drbspec REGULAR_SPEC_OPTIONS
</pre>

The drbspec command (formerly script/rails_spec) script has the same command line interface 
as the familiar spec command. But it's MUCH faster. drbspec is installed as part of the RSpec gem.

h3. Running specs with Rake

Note that the rake tasks don't use the fast rails_spec command - it uses the
standard spec. Also note that it is pre-configured to run any file that ends
in "_spec", so you'll have to either follow that convention or adjust the Rakefile.

All specs (excluding plugins) can be run with...

<pre>
rake spec
rake spec:app
</pre>

All specs including plugins can be run with...

<pre>
rake spec:all
</pre>

You can also isolate Model, Controller, View, Helper or Plugin specs with...

<pre>
rake spec:models
rake spec:controllers
rake spec:views
rake spec:helpers
rake spec:plugins
</pre>

To see all the RSpec related tasks, run

<pre>
rake --tasks spec
</pre>

