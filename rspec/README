== RSpec

RSpec is a Behaviour Definition Framework, which you can use to write executable
examples of the expected behaviour of an application (OK, tests).

== Expectations

RSpec adds two methods to every object: <code>should</code> and <code>should_not</code>,
each of which takes an expectation matcher. RSpec
provides a collection of useful matchers, as well as a simple mechanism for writing your
own custom matchers. Here are a couple of examples, but see Spec::Expectations::Matchers
for more detail:

  @message = "some message"
  @message.should == "some message"
  
== Mocks and Stubs

RSpec ships with a built-in mocking/stubbing framework.

See Spec::Mocks for more information.

== Installation

The simplest approach is to install the gem:

  gem install -r rspec #mac users must sudo

== Building the RSpec gem
If you prefer to build the gem locally, check out source from svn://rubyforge.org/var/svn/rspec/trunk. Then
do the following:

  rake gem
  gem install pkg/rspec-0.x.x.gem (you may have to sudo)

== Running the specs ==
In order to run RSpec's full suite of specs (rake pre_commit) you must install the following gems:

* rake          # Runs the build script
* rcov          # Verifies that the code is 100% covered by specs
* webgen        # Generates the static HTML website
* RedCloth      # Required by webgen
* syntax        # Required by our own custom webgen extension to highlight ruby code
* diff-lcs      # Required if you use the --diff switch
* win32console  # Required by the --colour switch if you're on Windows
* meta_project  # Required in order to make releases at RubyForge
* heckle        # Required if you use the --heckle switch

Note that RSpec itself - once built - doesn't have any dependencies outside the Ruby core 
and stdlib - with a few exceptions:

* The spec command line uses diff-lcs when --diff is specified.
* The spec command line uses heckle when --heckle is specified.
* The Spec::Rake::SpecTask needs RCov if RCov is enabled in the task.

See http://rspec.rubyforge.org for further documentation.
